<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>pom</packaging>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>eu.sqooss.alitheia</groupId>
      <artifactId>core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi_R4_core</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi_R4_compendium</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <!-- 
        Hibernate mapping files are called *.hbm.xml and by
        convention live next to the Java files they belong to;
        we have the additional convention that the private database
        table sources (Java and Hibernate) live in a subdirectory
        and sub-package db, so we get

             src/eu/sqooss/metrics/<foo>/db

        You might want to lay things out differently.
   -->
  <build>
    <resources>
      <resource>
        <targetPath>eu/sqooss/service/db</targetPath>
        <directory>${basedir}/src/main/java/foo/metrics/bar/db</directory>
          <includes>
             <include>**/*.xml</include>
          </includes>
      </resource>
      <directory>${basedir}/src/main/resources</directory>
      <includes>
          <include>**/*</include>
      </includes>
    </resources>
  </build>
</project>
