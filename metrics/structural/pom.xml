<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- All metric plug-ins inherit from the eu.sqooss.metrics POM,
       which handles some of the basic setup for bundles. Keep
       the version number in sync (also with groupId below). 
   -->
  <parent>
    <groupId>eu.sqooss</groupId>
    <artifactId>metrics</artifactId>
    <version>0.8.0</version>
  </parent>

  <!-- All metric plug-ins shipped by the SQO-OSS project should live 
       in the eu.sqooss.metrics namespace;  third party plug-ins
       might belong somewhere else. Keep the version number in sync.
   -->
  <groupId>eu.sqooss.metrics</groupId>
    <artifactId>structural</artifactId>
    <version>0.8.0</version>
  <packaging>jar</packaging>

  <!-- General description of the plug-in. By convention the names
       given to SQO-OSS plug-ins are "Alitheia Plug-in '<foo>'".
       The description is visible to developers (for instance using 
       NetBeans) but not to users of the system.

       The URL is meaningful in some automated testing context
       which we no longer use. 
   -->
  <name>Alitheia Plug-in 'Code Structure Metrics'</name>
  <inceptionYear>2009</inceptionYear>
  <description>
	Implements classic code structure metrics.
  </description>

  <!-- These settings again are related to the Continuum testing
       system, which we no longer use. The paths are supposed to
       reflect where in the system the plug-in lives.
   -->
  <scm>
    <connection>
      scm:svn:https://svn.sqo-oss.eu/devel/trunk/metrics/structural
    </connection>
    <developerConnection>
      scm:svn:https://svn.sqo-oss.eu/devel/trunk/metrics/structural
    </developerConnection>
  </scm>

  <!-- Build targets. These are pretty straightforward but the
       resources and manifestFile elements should be checked for
       accuracy before you build your own bundle.
   -->
  <build>
    <defaultGoal>package</defaultGoal>
    <sourceDirectory>${basedir}/src</sourceDirectory>
    <outputDirectory>${basedir}/build</outputDirectory>
    <resources>
      <!-- Hibernate mapping files are called *.hbm.xml and by
           convention live next to the Java files they belong to;
           we have the additional convention that the private database
           table sources (Java and Hibernate) live in a subdirector
           and sub-package db, so we get

               src/eu/sqooss/metrics/<foo>/db

           You might want to lay things out differently.
       -->
      <resource>
        <directory>${basedir}/src/eu/sqooss/metrics/skeleton/db</directory>
        <targetPath>eu/sqooss/metrics/skeleton/db</targetPath>
        <includes>
           <include>**/*.hbm.xml</include>
        </includes>
      </resource>
      <resource>
          <directory>${basedir}/src/eu/sqooss/metrics/structural</directory>
          <targetPath>eu/sqooss/metrics/structural</targetPath>
          <includes>
              <inlude>config.properties</inlude>
          </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <finalName>${groupId}.${artifactId}-${version}</finalName>
          <archive>
            <!-- The manifest is just the manifest, but some people
                 insist on renaming it (as is done in most of the 
                 bundles of the Alitheia core, but not in the plug-ins).
             -->
            <manifestFile>${basedir}/manifest/manifest.mf</manifestFile>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration> 
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <generatePom>false</generatePom>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!--
       It is important to get the relative paths right here.
    -->
  <repositories>
    <repository>
      <id>sqoossrepo</id>
      <name>SQO-OSS Local Maven Repository</name>
      <url>file://${basedir}/../../sqoossrepo</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>sqoossdeploy</id>
      <name>SQO-OSS Deployment Directory</name>
      <url>file://${basedir}/../../equinox</url>
    </repository>
  </distributionManagement>

</project>

