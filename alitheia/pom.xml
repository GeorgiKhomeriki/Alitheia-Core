<project>
  <modelVersion>4.0.0</modelVersion>

  <!-- =======[ Alitheia's metrics - main POM                     ]======= -->
  <groupId>eu.sqooss</groupId>
  <artifactId>alitheia</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <!-- =======[ Project description                               ]======= -->
  <name>Alitheia Core</name>
  <url>http://ikaria.dmst.aueb.gr:8088/alitheia</url>
  <inceptionYear>2006</inceptionYear>
  <description>
    Contains the modules building the core SQO-OSS system 
  </description>

  <!-- =======[ Project license                                   ]======= -->
  <licenses>
    <license>
      <name>2-Clause BSD License</name>
      <url>http://www.gnu.org/licenses/info/BSD_2Clause.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <!-- =======[ Organisation description                          ]======= -->
  <organization>
    <name>SQO-OSS</name>
    <url>http://www.sqo-oss.eu/</url>
  </organization>

  <!-- =======[ Source code repository for this project           ]======= -->
  <scm>
    <connection>
      scm:svn:https://svn.sqo-oss.eu/devel/trunk/alitheia
    </connection>
    <developerConnection>
      scm:svn:https://svn.sqo-oss.eu/devel/trunk/alitheia
    </developerConnection>
    <!-- Configure and enable this, in case we provide an anonymous SVN viewer
    <url>http://hostname/sqooss</url>
    -->
  </scm> 

  <!-- =======[ Build options, goals and plug-ins configurations  ]======= -->
  <build>
    <defaultGoal>clean deploy</defaultGoal>
    <plugins>
      <!-- SITE-GENERATOR plug-in configuration                            -->
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <locales>en</locales>
        </configuration>
        <executions>
          <execution>
            <phase>deploy</phase>
            <goals>
              <goal>site</goal>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- DEPLOY plug-in configuration                                    -->
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <generatePom>false</generatePom>
        </configuration>
      </plugin>
      <!-- COMPILER plug-in configuration                                  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId> 
        <configuration>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <compilerArgument>-Xlint</compilerArgument>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <!-- CLEAN plug-in configuration                                     -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <!-- [byotov] Also cleanup all previously deployed SQO-OSS service
            bundles from the Equinox bundles repository.
          -->
          <filesets>
            <fileset>
              <directory>${user.dir}/equinox</directory>
              <includes>
                <include>**/eu.sqooss.service.${artifactId}_${version}.jar</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- ASSEMBLY plug-in configuration                                  -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <outputDirectory>${user.dir}</outputDirectory>
          <finalName>equinox</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>assembly.xml</descriptor>
          </descriptors>
          <executions>
            <execution>
              <id>sqooss.services</id>
              <phase>package</phase>
              <goals>
                <goal>directory-inline</goal>
              </goals>
            </execution>
          </executions>
        </configuration>
      </plugin>
    </plugins>
  </build> 

  <!-- =======[ Extra repositories for build dependencies ]=============== -->
  <repositories>
    <repository>
      <id>sqoossrepo</id>
      <name>SQO-OSS Local Maven Repository</name>
      <!-- Enable this, once the certificate for svn.sqo-oss.eu is fixed,
        and disable or remove the line that follows it
      <url>https://svn.sqo-oss.eu/devel/trunk/extlibs</url>
      -->
      <url>http://ikaria.dmst.aueb.gr:8088/sqoossrepo</url>
    </repository>
  </repositories>

  <!-- =======[ Snapshot repositories for Maven plugins ]================= -->
  <!-- Using a snapshot repository is not that good ideia, since it happens
       often that some of the plugins' snapshots doesn't work as expected.
       Enable at your own risk!
  <pluginRepositories>
    <pluginRepository>
      <id>Maven.Snapshots</id>
      <name>Maven Snapshots Repository</name>
      <url>http://snapshots.maven.codehaus.org/maven2/</url>
    </pluginRepository>
    <pluginRepository>
      <id>apache.snapshots</id>
      <name>Apache Development Repository</name>
      <url>http://cvs.apache.org/maven-snapshot-repository</url>
    </pluginRepository>
  </pluginRepositories>
-->

  <!-- =======[ Distribution policies                ]==================== -->
  <distributionManagement>
    <!-- Deploy the project reports site in this location                  -->
    <site>
      <id>buildsite</id>
      <url>scp://ikaria.dmst.aueb.gr/home/byotov/builds/site/alitheia</url>
    </site>
    <!-- Deploy project(s) releases into the following repository          -->
    <repository>
      <id>buildsite</id>
      <name>SQO-OSS Releases Repository</name>
      <url>scp://ikaria.dmst.aueb.gr/home/byotov/builds/releases</url>
    </repository>
    <!-- COMMENTED OUT
    <snapshotRepository>
      <id>buildsite</id>
      <name>SQO-OSS Snapshots Repository</name>
      <url>scp://ikaria.dmst.aueb.gr/home/byotov/builds/snapshots</url>
    </snapshotRepository>
    -->
  </distributionManagement>

  <!-- =======[ Tools for creating project reports                ]======= -->
  <reporting>
    <plugins>
      <!-- Plugin for generating JavaDoc from the project's sources        -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <charset>UTF-8</charset>
          <docencoding>UTF-8</docencoding>
          <excludePackageNames>eu.sqooss.impl</excludePackageNames>
        </configuration>
      </plugin>
      <!-- Plugin for checking the coding style of the project's sources   -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <!-- [byotov] Using a predefined checkstyle configuration is not
            that flexible (especially when you want to switch off an annoying
            report considered as critical by the configuration creator),
            therefore IMHO it's better if Checkstyle behaviour is fed by a 
            configuration file, that can be easily modified -->
          <!--
          <format>sun</format>
          -->
          <configLocation>sqooss_checks.xml</configLocation>
          <includes>**/*.java</includes>
          <enableRulesSummary>false</enableRulesSummary>
        </configuration>
      </plugin>
      <!-- Plugin for checking the project source against some codding rules
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <!-- Tell PMD explicitly to run in JDK 1.5 mode -->
        <configuration>  
          <targetJdk>1.5</targetJdk>  
        </configuration> 
        <reportSets>
          <reportSet>
            <reports>
              <report>pmd</report>
              <!-- Don't need Copy&Paste detector
              <report>cpd</report>
              -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Create cross references between reports and source files        -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <configuration>
          <!-- Don't need aggregation into the parent project
          <aggregate>true</aggregate>
          -->
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <!-- =======[ Mailing lists associated with this project        ]======= -->
  <!-- COMMENTED OUT
  <mailingLists>
    <mailingList>
      <name>SQO-OSS WP3 Mailing List</name>
      <subscribe>project-subscribe@localhost</subscribe>
      <unsubscribe>project-unsubscribe@localhost</unsubscribe>
      <post>project@localhost</post>
      <archive>http://localhost/pipermail/project/</archive>
    </mailingList>
  </mailingLists>
  -->

  <!-- =======[ CIS configuration                                 ]======= -->
  <ciManagement>
    <system>Apache Maven Continuum</system>
    <url>http://ikaria.dmst.aueb.gr:8089/continuum/servlet/continuum</url>
    <notifiers>
      <notifier>
        <type>mail</type>
        <configuration>
          <!-- Replace with the mailing list dedicated to the CIS results
          <address>continuum@sqo-oss.eu</address>
          -->
          <address>b.yotov@prosyst.com</address>
        </configuration>
      </notifier>
    </notifiers>
  </ciManagement>

  <!-- =======[ Modules part of this project                      ]======= -->
  <modules>
    <!-- Add Alitheia modules here -->
    <module>core</module>
    <module>web-services</module>
    <module>tester</module>
  </modules>

  <!-- =======[ List of developers working on this project        ]======= -->
  <developers>
    <developer>
      <id>byotov</id>
      <name>Boryan Yotov</name>
      <email>b.yotov@prosyst.com</email>
      <organization>ProSyst Software GmbH</organization>
      <!-- Unfortunatelly Maven does not support daylight saving           -->
      <timezone>+2</timezone>
    </developer>
  </developers>
</project>

