# The bundles in an Alitheia system. Start levels
# below 10 are for 'system' bundles, shipped with OSGi.
# After that, order the bundles by their dependencies.
# In the concrete case below, the logger goes first (with
# start level 10) because all the other services use it.
#
# Core stuff goes in 10-29 range.
# Initial UI stuff goes in 30-39 range.
# Metrics go in the 40-49 range.
# Self-tester is 50, the last to start. It has additional
#    run-time configuration below.

###
#
# Bundles list inclusive start levels
#
osgi.bundles= \
    org.eclipse.osgi.util-3.1.100.v20060918@2:start, \
    org.eclipse.osgi.services-3.1.100.v20060918@2:start, \
    org.eclipse.equinox.ds-1.0.0.v20070226@2:start, \
    org.eclipse.equinox.log-1.0.100.v20070226@2:start, \
    javax.servlet-2.4.0.v200612120446@3:start, \
    javax.mail-1.4@3:start, \
    javax.saaj.api-1.3.0@3:start, \
    javax.stax.api-1.0.1@3:start, \
    org.eclipse.equinox.http.jetty-1.0.0.v20070318@4:start, \
    org.eclipse.equinox.http.servlet-1.0.0.v20070318@4:start, \
    org.mortbay.jetty-5.1.11@4:start, \
    org.apache.log4j-1.2.15@4:start, \
    org.apache.commons.logging-1.1.1@4:start, \
    org.apache.commons.codec-1.3.0@4:start, \
    org.apache.commons.collections-2.1.1@4:start, \
    org.apache.commons.httpclient-3.0.1@4:start, \
    org.apache.axiom.api-1.2.2@5:start, \
    org.apache.axiom.dom-1.2.2, \
    org.apache.axiom.impl-1.2.2, \
    org.apache.axis2.databinding-1.1.0, \
    org.apache.axis2.kernel-1.1.0@5:start, \
    org.apache.muse.complete-2.2.0@5:start, \
    org.apache.muse.osgi.soa.axis2-1.0.0@5:start, \
    org.apache.neethi-2.0.0@5:start, \
    org.apache.velocity-1.5@5:start, \
    org.apache.ws.commons.schema-1.2.0@5:start, \
    org.apache.ws.java2wsdl-1.1.0@5:start, \
    org.apache.wsdl4j-1.6.1@5:start, \
    org.apache.xalan-2.7.0@5:start, \
    org.apache.xerces-2.8.0.M20070504-incubation@5:start, \
    org.apache.xml.resolver-1.1.0.M20070504-incubation@5:start, \
    org.codehaus.stax2-3.0.1@5:start, \
    org.eclipse.corona.soa.common.axis2-0.9.0.M20070504-incubation@5:start, \
    org.eclipse.corona.soa.common-0.9.0.M20070504-incubation@5:start, \
    org.eclipse.corona.soa.provider.axis2.util-0.9.0.M20070504-incubation, \
    org.eclipse.corona.soa.provider.axis2-0.9.0.M20070504-incubation@5:start, \
    org.w3c.dom-1.3.3.M20070504-incubation@5:start, \
    org.dom4j-1.6.1@6:start, \
    org.junit-4.4@6:start, \
    org.hibernate-3.2.5@6:start, \
    org.postgresql.jdbc-8.2.505@6:start, \
    org.apache.derby-10.3.2.1@6:start, \
    org.tmatesoft.svnkit-1.1.4@6:start, \
    eu.sqooss.lib-0.0.1@8:start,\
    eu.sqooss.alitheia.core-0.0.1@10:start,\
    eu.sqooss.alitheia.web-services-0.0.1@30:start, \
    eu.sqooss.corba.corbaservice-0.0.1@35:start, \
    eu.sqooss.metrics.wc-0.0.1@41:start, \
    eu.sqooss.metrics.clmt-0.0.1@41:start, \
    eu.sqooss.metrics.productivity-0.0.1@41:start, \
    eu.sqooss.alitheia.tester-0.0.1@50:start
# Other bundles get this start level; should be relatively large.
# A good value is 40, which is when the metrics start and after all
# the core services and UI are ready.
osgi.bundles.defaultStartLevel=40
osgi.startLevel=50

###
#
# Configuration values for specific bundles.
#

###
#
# Logging
#
# Pattern for logging of events for the ui
eu.sqooss.logbuffer.pattern=%p [%t] %c - %m%n

###
#
# Web admin and web services
#
# HTTP port.
org.osgi.service.http.port=8088

###
#
# Database service
#
# DB URL. This is a JDBC connection URL which should point to the
# preferred database connection mechanism, including all of the
# required authentication information. The exact format depends
# on the database driver.
#
# The fallback (if enabled) is always to Derby, so you can, if you
# really want, specify a empty URL here and then let Alitheia fallback.
eu.sqooss.db.url=jdbc:postgresql:alitheia?user=alitheia&password=alitheia
eu.sqooss.db.driver=org.postgresql.Driver
eu.sqooss.db.dialect=org.hibernate.dialect.PostgresDialect
eu.sqooss.db.fallback.enable=true
# These are the fallback values, which you should not have to specify
#
# eu.sqooss.db.url=jdbc:derby:derbyDB;create=true
# eu.sqooss.db.driver=org.apache.derby.jdbc.EmbeddedDriver
# eu.sqooss.db.dialect=org.hibernate.dialect.DerbyDialect

# In the fallback case, Derby is used, which writes a log file
# of its own (not using any other common logging mechanisms)
# so configure that separately. Not normally used in production.
derby.stream.error.file=logs/derby.log

# We also need MySQL JDBC connections for the Bugzilla dumps.
eu.sqooss.db.driver.bugzilla=com.mysql.jdbc.Driver
eu.sqooss.db.dialect.bugzilla=org.hibernate.dialect.MySQLDialect

###
#
# Fat data service.
#
# Root of the FDS filespace. All of the checkouts go underneath here,
# in the current implementation as <projectId>/<revision>/
eu.sqooss.fds.root=/var/tmp/fds

###
#
# Security service
#
# This property enables the security control.
eu.sqooss.security.enable=false
# This property configures the public address of the server.
#eu.sqooss.security.server.url=
# This property configures the default user's name.
# This user have write permission to the security service
# (i.e. can create new accounts) 
eu.sqooss.security.user.name=alitheia
# This property configures the default user's password.
eu.sqooss.security.user.password=alitheia
# This property configures the default user's e-mail
eu.sqooss.security.user.email=NA
# This property configures the default user's group
eu.sqooss.security.user.group=alitheia

###
#
# Messaging service
#
# This property sets the SMTP server
eu.sqooss.messaging.smtp.host=localhost
# This property sets the SMTP port
eu.sqooss.messaging.smtp.port=25
# This property sets the SMTP user's email address
#eu.sqooss.messaging.smtp.user=
# This property sets the user's password
#eu.sqooss.messaging.smtp.pass=
# This property sets the SMTP reply e-mail address
# On a live system change this to a real address
eu.sqooss.messaging.smtp.reply=noreply@sqooss.eu

###
#
# Corba service.
#
# This globally enables the corba service (thread). Having corba enabled
# means that you must have an ORB running locally (or wherever the corba
# ORB is configured).
#
eu.sqooss.corba.enable=false

# Corba Name Service location
eu.sqooss.corba.orb.nameservice=corbaloc:iiop:1.2@localhost:2809/NameService


###
#
# Self-test at startup
#
# Enable the self-tester at startup time. This will use reflection
# to try to run a self-test on each SQO-OSS service
eu.sqooss.tester.enable=false

# You can suppress the test for specific services by specifying a 
# non-true value for the *class* name of the specific service.
# Services that are not specifically disabled here are assumed
# to be enabled (subject to the global enable, above).
#
# Most of these services are actually internal to the core, so
# you don't see them in the bundle list -- use the source.
eu.sqooss.tester.enable.SchedulerServiceImpl=false
# Stress-test the DB connection service up to the maximum pool size.
# This produces lots of startup output, so disable by default.
eu.sqooss.tester.enable.DBServiceImpl=false

# Some services have sub-configuration possibilities too.
# These are handled programmatically by the individual service.
#
# Test the rm -rf functionality. Creates many files in /tmp and deletes them.
eu.sqooss.tester.enable.FDSServiceImpl.DiskUtil=false
# Test the updater. This will check out KPilot r.4 through r.60.
eu.sqooss.tester.enable.FDSServiceImpl.Updates=false

