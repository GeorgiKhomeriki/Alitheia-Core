/*
 * This file is part of the Alitheia system, developed by the SQO-OSS
 * consortium as part of the IST FP6 SQO-OSS project, number 033331.
 *
 * Copyright 2007-2008-2008 by the SQO-OSS consortium members <info@sqo-oss.eu>
 * Copyright 2007-2008-2008 by Sebastian Kuegler <sebas@kde.org>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

package eu.sqooss.webui;

public abstract class ListView {

    // Contains the servlet path of the page where this view will be displayed
    private String servletPath;

    // Holds the terrier's instance.
    protected Terrier terrier;

    /**
     * Renders the data stored in this object into HTML.
     * 
     * @param indentationDepth indentation depth of the generated HTML
     *   content.
     * 
     * @return The HTML content.
     */
    public abstract String getHtml(long indentationDepth);

    /**
     * Return an HTML snippet string representing the view's icon.
     * 
     * @param name the icon's filename (without the ".png" extension)
     * 
     * @return the icon's HTML string
     */
    public String icon(String name) {
        return Functions.icon(name, 0);
    }

    /**
     * Return an HTML snippet string representing the view's icon at
     * a certain size.
     * 
     * @param name the icon's filename (without the ".png" extension)
     * @param size the icon's size (in pixels)
     * 
     * @return the icon's HTML string
     */
    public String icon(String name, int size) {
        return Functions.icon(name, size);
    }

    /**
     * Gets the servlet path of the page where this view will be displayed.
     * 
     * @return the servlet path
     */
    protected String getServletPath() {
        return servletPath;
    }

    /**
     * Sets the servlet path of the page where this view will be displayed.
     * 
     * @param servletPath the new servlet path
     */
    public void setServletPath(String servletPath) {
        this.servletPath = servletPath;
    }

    /**
     * Generates a string that contains a <b>2*num</b> spaces.
     * <br/>
     * <i>Used for indentation of the HTML content that is generated by the
     * various views.</i>
     * 
     * @param num the indentation depth
     * 
     * @return The indentation string.
     */
    protected static String sp (long num) {
        StringBuilder b = new StringBuilder();
        for (long i = 0; i < num; i++)
            b.append("  ");
        return b.toString();
    }
}
