# This Makefile is part of the Alitheia system produced by the SQO-OSS
# consortium and is covered by the same LICENSE as the rest of the system:
# the 2-Clause FreeBSD license which you may find in the LICENSE file
# in the devel/trunk/ directory of the Alitheia development repository.

# Common targets for intermediate directories (e.g. alitheia/ and metrics/)
# are defined here. This is used to either propagate builds downwards to
# subdirectories or to provide a convenient command-line build point
# (e.g. 'make' in the alitheia/ directory should build everything under 
# there without mucking about with Maven invocations).
#
# Useful targets are:
#
# clean           - Remove build artifacts from subdirectories
# build (default) - Compile all the subdirectories
# install         - Install build artifacts from subdirectories
#
# You should set SUBDIRS and TOP_SRCDIR before including this Makefile.

include $(TOP_SRCDIR)/Makefile.config

# By default, build everything. We just invoke Maven to do the work.
all : build

.DEFAULT : all

build : build-dir
	$(MAVEN) package install

build-dir : build-subdirs

ifeq ($(SUBDIRS),)
build-subdirs :
else
build-subdirs :
	for i in $(SUBDIRS) ; do ( cd $$i && $(MAKE) build-dir ) || exit 1; done
endif

# Duplicate target if you *just* want to invoke Maven
build-maven :
	$(MAVEN) package install

# Clean is propagated to the subdirectories, as is install. We don't
# do this with Maven because of the way files are named in the installation
# directory.
clean : clean-subdirs clean-dir

ifeq ($(SUBDIRS),)
clean-subdirs :
else
clean-subdirs :
	for i in $(SUBDIRS) ; do ( cd $$i && $(MAKE) clean ) || exit 1; done
endif

clean-dir :

install : install-subdirs install-dir

ifeq ($(SUBDIRS),)
install-subdirs :
else
install-subdirs :
	for i in $(SUBDIRS) ; do ( cd $$i && $(MAKE) install ) || exit 1; done
endif

install-dir :

# Just in case someone needs to be reminded of how to invoke Maven.
help :
	@echo $(MAVEN)

.PHONY : all build build-maven build-dir clean clean-subdirs clean-dir install install-subdirs install-dir help

# This macro constructs a classpath out of a list of jar names,
# a path where those jars live and a variable name to put the
# resulting classpath. Usage:
#
# build_classpath <result> <jars> <path>
#
# all three the parameters are *variable names*, not actual values.
#
# typically you call this as follows:
#
# $(eval $(call build_classpath,CLASSPATH,EXT_LIBS,EXT_PATH))
#
# and you get the classpath version of $(EXT_LIBS) with $(EXT_PATH)
# prepended to each stored in $(CLASSPATH). Windows is handled as
# well, yielding a semicolon-separated list instead of colons.
# The result variable is appended to, not reset.
#
define build_classpath
$$(foreach d,$$($(2)),$$(eval $(1):=$$($(1))$$($(3))/$$(strip $$(d)):))
ifeq ($$(OS),Windows_NT)
$(1):=$$(subst :,;,$$(subst /,\,$$($(1))))
endif
endef

