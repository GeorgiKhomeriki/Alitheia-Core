<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="pref">
<title>Preface</title>
<sect1 id="pref:whatis">
    <title>What is SQO-OSS?</title>
    <para>
    SQO-OSS is a project that aims at
implementing a quality-checking system that can be used by Open Source software
projects to gather information about the quality of their code and relate this
information to other data sources such as issue-tracker data and mailinglist
archives. SQO-OSS can be utilised for management-level information to assess
various aspects of a software project, such as developer productivity. The system
is also useful for developers that want to use static source code analysis
to improve the code.
    </para>


<para>
SQO-OSS is funded through the European Union
and will be released under a Free Software license
in late 2008. The platform will be deployed
in a central location for processing a number of
large projects; having quality evaluations
of many Open Source projects
in one place enables easier comparison of the
quality of different projects.
Individual Open Source projects are encouraged
to deploy the Alitheia system for their local
quality control and evaluation processes.
Because of the architecture of the Alitheia system,
the system scales up from relatively modest hardware
checking a single project to distributed hardware
supporting hundreds of projects and users.
</para>


</sect1>
<sect1 id="pref:alitheia">
    <title>What is Alitheia?</title>

<para>
Alitheia is the name of a platform,
developed by the SQO-OSS project,
for the automated objective evaluation of the quality
of Open Source projects.
By analyzing both the soft and the hard project
artifacts (the project source code history is "hard"
while the mailing lists, bug tracker entries
and other human communications are "soft")
the Alitheia software will produce a broader
and more comprehensive picture of the quality
and viability of each Open Source project than tools that
examine only the product of the project.
</para>


<para>The name Alitheia was chosen for its Greek roots
(the majority of the project is executed in Greece).
In ancient Greek, the term stands for "neat and businesslike
truth."
The Alitheia system does indeed intend to deliver the neat
and businesslike truth
about Open Source projects.
By evaluating the quality --- captured in
measurements of many different aspects of quality
and aggregated through the SQO-OSS quality model ---
of Open Source projects
over time it becomes possible to compare and contrast
different projects, but most importantly gives the
contributors to the projects an idea of how their
own quality is developing.
</para>


</sect1>
<sect1 id="pref:hist">
    <title>A bried history of SQO-OSS</title>
    <para>
Quality Assessment in the Open Source world has traditionally
been relying on peer to peer review techniques. Only slowly
are more structured, machine-like approaches entering this field.
KDE has, for quite some time run a simple static quality checker
for some aspects of their code. The Englishbreakfastnetwork (EBN)
, initially set up as checking mechanism for the completeness of
API documentation in KDE has been extended with "Krazy" and later "Krazy2"
in KDE now also checks for some commonly made mistakes, licensing and so on.

The EBN prove to be a good way to get developers to fix these issues
in the code as it makes it a manageable task that can be done
relatively independent from creativity. It basically follows the "Don't
want to deeply think about code? Here's something trivial to do in
the meantime" approach. One issue of the EBN is scalability.

The underlying assumption that developers who get served issues in their
code will eventually fix those issues also prove true when Coverity
started regular checking of KDE's code base with their proprietary
checking mechanism. Most issues were found were fixed shortly after
they have been reported.

SQO-OSS attempts to poke into this same whole. Making issues visible
and easy to digest to the developer to improve code quality. KDE in
this contex is just one example. The SQO-OSS platform is built to
support checking multiple projects over time, record the data and report
them to developers and other interested parties in a meaningful way.
    </para>
</sect1>
<sect1 id="pref:conventions">
    <title>Conventions</title>
    <para>
    What conventions are mean here?
    - Coding conventions?
    - Startrek conventions?

The SQO-OSS project makes good use of Javadoc in order to document
our system. Good documentation standards are particularly important
given the complex relationship between our components and the
underlying OSGi-based Equinox framework. In general the Javadoc
style guidelines described at
http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
should be followed.

    </para>
</sect1>
<sect1 id="pref:info">
    <title>Further Information</title>
    <para>
Further information about the SQO-OSS project can be found via the
website http://www.sqo-oss.org. There you also find links to mailinglist
which is the preferred way of getting in contact with the developers.
    </para>
</sect1>
<sect1 id="pref:involve">
    <title>Getting involved</title>
    <para>
The SQO-OSS project welcomes contributions. The easiest way for
new contributors to SQO-OSS is probably to start writing plugins
for the system. This way of scratching your own itch will allow
contributors to extract what ever data they want to get out of
their code. Writing plugins is easy and well documented. Those
plugins can be written in Java or Python.
To get started, best subscribe to the SQO-OSS plugins mailinglist
(plugins@sqo-oss.org), to be found via
http://www.sqo-oss.org/xwiki/bin/view/Community/Mailing+Lists.

The SQO-OSS website (http://www.sqo-oss.org) has more information
on how you can join the SQO-OSS project in a meaningful way,
especially the Gettting involved section tends to be useful (http://www.sqo-oss.org/xwiki/bin/view/Development/Get+Involved).
    </para>
</sect1>
<sect1 id="pref:bugrep">
    <title>Bug Reporting</title>
    <para>
SQO-OSS uses Bugzilla to track issues with the software. Developers,
testers and users alike are encouraged to report issues with the
system to https://bugs.sqo-oss.org so they can be tracked, triaged and
fixed.
    </para>
</sect1>
</chapter>
