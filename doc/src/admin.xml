<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="admin">
<title>Installation and administration</title>
<sect1 id="prereq">
    <title>Prerequisites</title>
    <para></para>
</sect1>
<sect1 id="admin:compile">
    <title>Compilation procedure</title>
    <para></para>
</sect1>
<sect1 id="admin:install">
    <title>Installation procedure</title>
    <para></para>
    <sect2 id="admin:install:webui">
        <title>Installing WebUI</title>
        <para>
          Alithea's WebUI web application has to be deployed into an
          Apache Tomcat environment. The WebUI WAR file is named and has to be
          installed as a Tomcat ROOT application.
        </para>
        <para>
          For a manual installation we expect that you know the location of
          the WebUI WAR file and of course Tomcat's installation path:
        <itemizedlist mark='opencircle'>
          <listitem>
            <para>
              <command>$WEBUI</command>
              must point to the location of the WebUI WAR file
            </para>
          </listitem>
          <listitem>
            <para>
              <command>$TOMCAT</command>
              must point to the Tomcat's installation folder (usually the
              directory containing the webapps directory.
            </para>
          </listitem>
        </itemizedlist>
          The installation process is as simple as copying the WAR file into
          the Tomcat's application folder:
        <orderedlist numeration="arabic">
          <listitem>
            <para>
              On Unix/Linux:
              <command>
                cp $WEBUI $TOMCAT/webapps
              </command>
              Then start Tomcat as usuall:
              <command>
                $TOMCAT/bin/catalina.sh start
              </command>
              Tomcat itself takes care of unpacking and deploying the WebUI
              application from the WAR file.
            </para>
          </listitem>
          <listitem>
            <para>
              If you want to reinstall the WebUI, first you should remove its
              previous deployment. On Unix/Linux use the following steps:
              <command>
                rm -rf $TOMCAT/webapps/ROOT
              </command>
              and the corresponding application cache tree from the Tomcat
              work folder (the following example is for a Tomcat listening
              on localhost):
              <command>
                rm -rf $TOMCAT/work/Catalina/localhost/_
              </command>
            </para>
          </listitem>
        </orderedlist>
        </para>
    </sect2>
</sect1>
<sect1 id="admin:task">
    <title>Administrative tasks</title>
    <para>
        WebAdmin is the interface used by Alitheia administrators to configure and maintain
        the system. Initially planned in the design as a simpler commandline-based interface
        as mention in section 3.4 of SQO-OSS D5, it is now implemented as a more conve-
        nient web application. WebAdmin communicates with Alitheia through the SQO-OSS
        Connector Library (SCL).
        These are the major areas of functionality implemented in WebAdmin:
    </para>

    <title>Project Data Storage Maintenance</title>
    <para>
        Administrators register projects to be analyzed by
        Alitheia in WebAdmin. The processing of the project begins as soon as it is
        registered. On top of that, administrators have to set up how the SCMs, bugtrackers
        and communication channels are accessed by Alitheia's core, this functionality is not
        part of WebAdmin.
    </para>

    <title>Metric Plugin Management</title>
    <para>
        Plugins that implement metrics are activated in WebAdmin. Metrics can then be associated
        with projects.
    </para>

    <title>Service Management</title>
    <para>
        Service Management The system itself can be stopped and restarted out of WebAdmin.
        The system reports its status through WebAdmin, and some of the systems
        run-time parameters can be adjusted.
    </para>

    <title>Logging</title>
    <para>
            The runtime logs of Alitheia can be inspected from within WebAdmin.
    </para>

    <title>Job Scheduling</title>
    <para>
        WebAdmin allows the administrators to inspect the length of the
        current jobs queue, the statistics of the processed jobs, and the reasons for possible
        processing failures.(Figure 4)
    </para>

    <title>Security</title>
    <para>
        Security: User and permission management is performed through WebAdmin.
        D5 mentions two more features of WebAdmin, namely database management and
        inspection of measurement data. To avoid duplication of existing functionality, we
        have decided to leave database management to the tools provided by the database
        system. The inspection of measurement data is a major responsibility of the Alitheia
        WebUi, and will thus be only referenced, but not implemented, in WebAdmin.
    </para>

    <sect2 id="admin:task:cons">
        <title>The admin console</title>
        <para></para>
    </sect2>
    <sect2 id="admin:task:addpr">
        <title>Adding projects</title>
        <para>


        </para>
    </sect2>
    <sect2 id="admin:task:addplug">
        <title>Adding new plug-ins</title>
        <para>


        </para>
    </sect2>
</sect1>
<sect1 id="admin:config">
    <title>Configuration</title>
    <para>


    </para>
    <sect2 id="admin:config:console">
        <title>The admin console</title>
        <para>


        </para>
    </sect2>
</sect1>
<sect1 id="admin:plug">
    <title>Plug-in specific documentation</title>
    <para></para>
    <sect2 id="admin:plug:wc">
        <title>WC Plugin</title>
        <para>


        </para>
    </sect2>
    <sect2 id="admin:plug:contib">
        <title>Contributing plug-ins</title>
        <para>


        </para>
    </sect2>
</sect1>
</chapter>
